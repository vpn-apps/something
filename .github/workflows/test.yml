name: Test CI
on:
  workflow_dispatch:
  push:
    tags:
      - '*'
jobs:
  build-arm32:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create dist directory
        run: |
          sudo mkdir -p /opt/dist
          sudo chmod 777 /opt/dist
      
      - name: Build arm32 docker
        run: docker build -t arm32 -f Dockerfile .
      
      - name: Compile arm32 build
        run: |
          docker run --rm \
            -v /opt/dist:/opt/dist \
            -e DIST_DIR='/opt/dist' \
            -e RELEASE_TAG="$GITHUB_REF_NAME" \
            -e NATIVE_ARCH="arm" \
            -e ABI_ID=1 \
            -e ABI_TARGET="armeabi-v7a" \
            -e KS_FILE="${{ secrets.KS_FILE }}" \
            -e KS_PASSWORD="${{ secrets.KS_PASSWORD }}" \
            -e KEY_ALIAS="${{ secrets.KEY_ALIAS }}" \
            -e KEY_PASSWORD="${{ secrets.KEY_PASSWORD }}" \
            arm32
      
      - name: Debug - List dist directory before artifact upload
        run: |
          echo "Contents of /opt/dist:"
          ls -la /opt/dist
          echo "File type of XrayCore.aar:"
          file /opt/dist/XrayCore.aar || true
      
      - name: Upload arm32 artifact
        uses: actions/upload-artifact@v4
        with:
          name: arm32-build
          path: /opt/dist/
          retention-days: 1
  
  publish:
    runs-on: ubuntu-latest
    needs:
      - build-arm32
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download arm32 artifact
        uses: actions/download-artifact@v4
        with:
          name: arm32-build
          path: dist
      
      - name: Debug - List downloaded artifacts
        run: |
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Full path of current directory:"
          pwd
          echo "File type of XrayCore.aar (if exists):"
          file dist/XrayCore.aar || true
          echo "Tree structure of dist directory:"
          tree dist/ || true
      
      - name: Set VERSION_CODE
        run: |
          ALL_VARIANTS=4
          VERSION_CODE=$(cat "$GITHUB_WORKSPACE/app/versionCode.txt")
          ((VERSION_CODE += ALL_VARIANTS))
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
      
      - name: Debug - List files before publish
        run: |
          echo "Files matching dist/*.aar:"
          find dist -name "*.aar" || true
          echo "Files matching dist/*.apk:"
          find dist -name "*.apk" || true
      
      - name: Publish release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: false
          draft: false
          files: |
            ./dist/*.apk
            ./dist/*.aar
          body_path: ${{ github.workspace }}/metadata/en-US/changelogs/${{ env.VERSION_CODE }}.txt

      - name: Debug - List published files
        if: always()
        run: |
          echo "Released files for tag ${{ github.ref_name }}:"
          gh release view ${{ github.ref_name }} --json assets --jq '.assets[].name'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
